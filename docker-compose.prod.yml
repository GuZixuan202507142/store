version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: store-db-prod
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./store-backend/.env
    networks:
      - store-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U store"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: ${DOCKER_HUB_USERNAME}/copilot-store-backend:latest
    container_name: store-backend-prod
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - ./store-backend/.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - store-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: ${DOCKER_HUB_USERNAME}/copilot-store-frontend:latest
    container_name: store-frontend-prod
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - store-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  store-network:
    driver: bridge
